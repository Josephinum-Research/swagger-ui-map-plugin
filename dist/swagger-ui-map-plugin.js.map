{"version":3,"file":"swagger-ui-map-plugin.js","mappings":"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","sources":["webpack://swagger-ui-map-plugin/webpack/universalModuleDefinition","webpack://swagger-ui-map-plugin/webpack/bootstrap","webpack://swagger-ui-map-plugin/webpack/runtime/define property getters","webpack://swagger-ui-map-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://swagger-ui-map-plugin/webpack/runtime/make namespace object","webpack://swagger-ui-map-plugin/./node_modules/ol/events/Event.js","webpack://swagger-ui-map-plugin/./node_modules/ol/ObjectEventType.js","webpack://swagger-ui-map-plugin/./node_modules/ol/Disposable.js","webpack://swagger-ui-map-plugin/./node_modules/ol/array.js","webpack://swagger-ui-map-plugin/./node_modules/ol/functions.js","webpack://swagger-ui-map-plugin/./node_modules/ol/obj.js","webpack://swagger-ui-map-plugin/./node_modules/ol/events/Target.js","webpack://swagger-ui-map-plugin/./node_modules/ol/events/EventType.js","webpack://swagger-ui-map-plugin/./node_modules/ol/events.js","webpack://swagger-ui-map-plugin/./node_modules/ol/Observable.js","webpack://swagger-ui-map-plugin/./node_modules/ol/util.js","webpack://swagger-ui-map-plugin/./node_modules/ol/Object.js","webpack://swagger-ui-map-plugin/./node_modules/ol/CollectionEventType.js","webpack://swagger-ui-map-plugin/./node_modules/ol/Collection.js","webpack://swagger-ui-map-plugin/./node_modules/ol/layer/Property.js","webpack://swagger-ui-map-plugin/./node_modules/ol/asserts.js","webpack://swagger-ui-map-plugin/./node_modules/ol/math.js","webpack://swagger-ui-map-plugin/./node_modules/ol/layer/Base.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/EventType.js","webpack://swagger-ui-map-plugin/./node_modules/ol/ViewProperty.js","webpack://swagger-ui-map-plugin/./node_modules/ol/proj/Units.js","webpack://swagger-ui-map-plugin/./node_modules/ol/proj/Projection.js","webpack://swagger-ui-map-plugin/./node_modules/ol/proj/epsg3857.js","webpack://swagger-ui-map-plugin/./node_modules/ol/proj/epsg4326.js","webpack://swagger-ui-map-plugin/./node_modules/ol/proj/projections.js","webpack://swagger-ui-map-plugin/./node_modules/ol/proj/transforms.js","webpack://swagger-ui-map-plugin/./node_modules/ol/extent.js","webpack://swagger-ui-map-plugin/./node_modules/ol/extent/Relationship.js","webpack://swagger-ui-map-plugin/./node_modules/ol/coordinate.js","webpack://swagger-ui-map-plugin/./node_modules/ol/sphere.js","webpack://swagger-ui-map-plugin/./node_modules/ol/console.js","webpack://swagger-ui-map-plugin/./node_modules/ol/proj.js","webpack://swagger-ui-map-plugin/./node_modules/ol/centerconstraint.js","webpack://swagger-ui-map-plugin/./node_modules/ol/resolutionconstraint.js","webpack://swagger-ui-map-plugin/./node_modules/ol/rotationconstraint.js","webpack://swagger-ui-map-plugin/./node_modules/ol/easing.js","webpack://swagger-ui-map-plugin/./node_modules/ol/transform.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/flat/transform.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/Geometry.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/SimpleGeometry.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/flat/closest.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/flat/deflate.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/flat/simplify.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/flat/inflate.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/flat/area.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/LinearRing.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/Point.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/flat/contains.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/flat/interiorpoint.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/flat/segments.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/flat/intersectsextent.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/flat/reverse.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/flat/orient.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/Polygon.js","webpack://swagger-ui-map-plugin/./node_modules/ol/View.js","webpack://swagger-ui-map-plugin/./node_modules/ol/tilegrid/common.js","webpack://swagger-ui-map-plugin/./node_modules/ol/ViewHint.js","webpack://swagger-ui-map-plugin/./node_modules/ol/layer/Layer.js","webpack://swagger-ui-map-plugin/./node_modules/quickselect/index.js","webpack://swagger-ui-map-plugin/./node_modules/rbush/index.js","webpack://swagger-ui-map-plugin/./node_modules/ol/size.js","webpack://swagger-ui-map-plugin/./node_modules/ol/style/Image.js","webpack://swagger-ui-map-plugin/./node_modules/color-space/rgb.js","webpack://swagger-ui-map-plugin/./node_modules/color-space/xyz.js","webpack://swagger-ui-map-plugin/./node_modules/color-space/luv.js","webpack://swagger-ui-map-plugin/./node_modules/color-space/lchuv.js","webpack://swagger-ui-map-plugin/./node_modules/color-parse/node_modules/color-name/index.js","webpack://swagger-ui-map-plugin/./node_modules/color-parse/index.js","webpack://swagger-ui-map-plugin/./node_modules/color-space/hsl.js","webpack://swagger-ui-map-plugin/./node_modules/ol/color.js","webpack://swagger-ui-map-plugin/./node_modules/color-rgba/index.js","webpack://swagger-ui-map-plugin/./node_modules/ol/has.js","webpack://swagger-ui-map-plugin/./node_modules/ol/dom.js","webpack://swagger-ui-map-plugin/./node_modules/ol/Image.js","webpack://swagger-ui-map-plugin/./node_modules/ol/ImageState.js","webpack://swagger-ui-map-plugin/./node_modules/ol/style/IconImageCache.js","webpack://swagger-ui-map-plugin/./node_modules/ol/style/IconImage.js","webpack://swagger-ui-map-plugin/./node_modules/ol/colorlike.js","webpack://swagger-ui-map-plugin/./node_modules/ol/css.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/canvas.js","webpack://swagger-ui-map-plugin/./node_modules/ol/style/RegularShape.js","webpack://swagger-ui-map-plugin/./node_modules/ol/style/Circle.js","webpack://swagger-ui-map-plugin/./node_modules/ol/style/Fill.js","webpack://swagger-ui-map-plugin/./node_modules/ol/style/Stroke.js","webpack://swagger-ui-map-plugin/./node_modules/ol/style/Style.js","webpack://swagger-ui-map-plugin/./node_modules/ol/style/Icon.js","webpack://swagger-ui-map-plugin/./node_modules/ol/style/Text.js","webpack://swagger-ui-map-plugin/./node_modules/ol/expr/expression.js","webpack://swagger-ui-map-plugin/./node_modules/ol/expr/cpu.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/canvas/style.js","webpack://swagger-ui-map-plugin/./node_modules/ol/layer/BaseVector.js","webpack://swagger-ui-map-plugin/./node_modules/ol/renderer/Map.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/Event.js","webpack://swagger-ui-map-plugin/./node_modules/ol/renderer/Composite.js","webpack://swagger-ui-map-plugin/./node_modules/ol/layer/Group.js","webpack://swagger-ui-map-plugin/./node_modules/ol/MapEvent.js","webpack://swagger-ui-map-plugin/./node_modules/ol/MapBrowserEvent.js","webpack://swagger-ui-map-plugin/./node_modules/ol/MapBrowserEventType.js","webpack://swagger-ui-map-plugin/./node_modules/ol/pointer/EventType.js","webpack://swagger-ui-map-plugin/./node_modules/ol/MapBrowserEventHandler.js","webpack://swagger-ui-map-plugin/./node_modules/ol/MapEventType.js","webpack://swagger-ui-map-plugin/./node_modules/ol/MapProperty.js","webpack://swagger-ui-map-plugin/./node_modules/ol/structs/PriorityQueue.js","webpack://swagger-ui-map-plugin/./node_modules/ol/TileQueue.js","webpack://swagger-ui-map-plugin/./node_modules/ol/TileState.js","webpack://swagger-ui-map-plugin/./node_modules/ol/control/Control.js","webpack://swagger-ui-map-plugin/./node_modules/ol/control/Attribution.js","webpack://swagger-ui-map-plugin/./node_modules/ol/control/Rotate.js","webpack://swagger-ui-map-plugin/./node_modules/ol/control/Zoom.js","webpack://swagger-ui-map-plugin/./node_modules/ol/interaction/Property.js","webpack://swagger-ui-map-plugin/./node_modules/ol/interaction/Interaction.js","webpack://swagger-ui-map-plugin/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://swagger-ui-map-plugin/./node_modules/ol/interaction/Pointer.js","webpack://swagger-ui-map-plugin/./node_modules/ol/events/condition.js","webpack://swagger-ui-map-plugin/./node_modules/ol/interaction/DragPan.js","webpack://swagger-ui-map-plugin/./node_modules/ol/interaction/DragRotate.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/Box.js","webpack://swagger-ui-map-plugin/./node_modules/ol/interaction/DragBox.js","webpack://swagger-ui-map-plugin/./node_modules/ol/interaction/DragZoom.js","webpack://swagger-ui-map-plugin/./node_modules/ol/events/Key.js","webpack://swagger-ui-map-plugin/./node_modules/ol/interaction/KeyboardPan.js","webpack://swagger-ui-map-plugin/./node_modules/ol/interaction/KeyboardZoom.js","webpack://swagger-ui-map-plugin/./node_modules/ol/Kinetic.js","webpack://swagger-ui-map-plugin/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://swagger-ui-map-plugin/./node_modules/ol/interaction/PinchRotate.js","webpack://swagger-ui-map-plugin/./node_modules/ol/interaction/PinchZoom.js","webpack://swagger-ui-map-plugin/./node_modules/ol/Map.js","webpack://swagger-ui-map-plugin/./node_modules/ol/control/defaults.js","webpack://swagger-ui-map-plugin/./node_modules/ol/interaction/defaults.js","webpack://swagger-ui-map-plugin/./node_modules/ol/Tile.js","webpack://swagger-ui-map-plugin/./node_modules/ol/ImageTile.js","webpack://swagger-ui-map-plugin/./node_modules/ol/reproj/Triangulation.js","webpack://swagger-ui-map-plugin/./node_modules/ol/reproj.js","webpack://swagger-ui-map-plugin/./node_modules/ol/reproj/Tile.js","webpack://swagger-ui-map-plugin/./node_modules/ol/reproj/common.js","webpack://swagger-ui-map-plugin/./node_modules/ol/structs/LRUCache.js","webpack://swagger-ui-map-plugin/./node_modules/ol/tilecoord.js","webpack://swagger-ui-map-plugin/./node_modules/ol/TileCache.js","webpack://swagger-ui-map-plugin/./node_modules/ol/source/Source.js","webpack://swagger-ui-map-plugin/./node_modules/ol/TileRange.js","webpack://swagger-ui-map-plugin/./node_modules/ol/tilegrid/TileGrid.js","webpack://swagger-ui-map-plugin/./node_modules/ol/tilegrid.js","webpack://swagger-ui-map-plugin/./node_modules/ol/source/Tile.js","webpack://swagger-ui-map-plugin/./node_modules/ol/uri.js","webpack://swagger-ui-map-plugin/./node_modules/ol/tileurlfunction.js","webpack://swagger-ui-map-plugin/./node_modules/ol/source/UrlTile.js","webpack://swagger-ui-map-plugin/./node_modules/ol/source/TileEventType.js","webpack://swagger-ui-map-plugin/./node_modules/ol/source/TileImage.js","webpack://swagger-ui-map-plugin/./node_modules/ol/source/XYZ.js","webpack://swagger-ui-map-plugin/./node_modules/ol/source/OSM.js","webpack://swagger-ui-map-plugin/./node_modules/ol/layer/TileProperty.js","webpack://swagger-ui-map-plugin/./node_modules/ol/layer/BaseTile.js","webpack://swagger-ui-map-plugin/./node_modules/ol/renderer/Layer.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/canvas/ZIndexContext.js","webpack://swagger-ui-map-plugin/./node_modules/ol/renderer/canvas/Layer.js","webpack://swagger-ui-map-plugin/./node_modules/ol/DataTile.js","webpack://swagger-ui-map-plugin/./node_modules/ol/reproj/DataTile.js","webpack://swagger-ui-map-plugin/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://swagger-ui-map-plugin/./node_modules/ol/layer/Tile.js","webpack://swagger-ui-map-plugin/./node_modules/ol/Feature.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/flat/interpolate.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/flat/center.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/Feature.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/flat/length.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/LineString.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/MultiPoint.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/MultiLineString.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/MultiPolygon.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/GeometryCollection.js","webpack://swagger-ui-map-plugin/./node_modules/ol/format/Feature.js","webpack://swagger-ui-map-plugin/./node_modules/ol/format/JSONFeature.js","webpack://swagger-ui-map-plugin/./node_modules/ol/format/GeoJSON.js","webpack://swagger-ui-map-plugin/./node_modules/ol/structs/RBush.js","webpack://swagger-ui-map-plugin/./node_modules/ol/source/VectorEventType.js","webpack://swagger-ui-map-plugin/./node_modules/ol/loadingstrategy.js","webpack://swagger-ui-map-plugin/./node_modules/ol/featureloader.js","webpack://swagger-ui-map-plugin/./node_modules/ol/source/Vector.js","webpack://swagger-ui-map-plugin/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/canvas/Instruction.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/VectorContext.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/canvas/Builder.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/flat/linechunk.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/flat/straightchunk.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/canvas/TextBuilder.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://swagger-ui-map-plugin/./node_modules/ol/geom/flat/textpath.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/canvas/Executor.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/canvas/Immediate.js","webpack://swagger-ui-map-plugin/./node_modules/ol/render/canvas/hitdetect.js","webpack://swagger-ui-map-plugin/./node_modules/ol/renderer/vector.js","webpack://swagger-ui-map-plugin/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://swagger-ui-map-plugin/./node_modules/ol/ImageCanvas.js","webpack://swagger-ui-map-plugin/./node_modules/ol/renderer/canvas/VectorImageLayer.js","webpack://swagger-ui-map-plugin/./node_modules/ol/resolution.js","webpack://swagger-ui-map-plugin/./node_modules/ol/layer/VectorImage.js","webpack://swagger-ui-map-plugin/./src/MapWrapperComponent.js","webpack://swagger-ui-map-plugin/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"swagger-ui-map-plugin\"] = factory();\n\telse\n\t\troot[\"swagger-ui-map-plugin\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @this {typeof target}\n     */\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(thisArg ?? this, arguments);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.1.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        (evt) => {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *   * `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(withNoArgs),\n  [Ops.Time]: createCallExpressionParser(withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      /**\n       * @type {import(\"./Tile.js\").default}\n       */\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @override\n   */\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   * @override\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/uri\n */\n\nimport {hashZXY} from './tilecoord.js';\nimport {modulo} from './math.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {renderXYZTemplate} from './uri.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * TODO: Update ol-mapbox-style to import this from the uri.js module.\n */\nexport {expandUrl} from './uri.js';\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @override\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   * @override\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   * @override\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @override\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      const tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n\n    let tile = this.tileCache.get(tileCoordKey);\n    if (tile.key != key) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.replace(tileCoordKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Deprecated.  Use an ImageTile source with a loader\n * instead.  Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] Deprecated.  Use an ImageTile source and provide an array of URLs for the\n * url option instead.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {DataTile} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8ClampedArray(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    const sourceTileGridExtent = options.sourceTileGrid.getExtent();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceTileGridExtent\n        ? getIntersection(sourceProjExtent, sourceTileGridExtent)\n        : sourceProjExtent\n      : sourceTileGridExtent;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n        const getTile = options.getTileFunction;\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   * @override\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   * @override\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @override\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    let imageLike = false;\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        imageLike = true;\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8ClampedArray;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n      extent[0] += source.offset;\n      extent[2] += source.offset;\n      const clipExtent = this.clipExtent_?.slice();\n      if (clipExtent) {\n        clipExtent[0] += source.offset;\n        clipExtent[2] += source.offset;\n      }\n      dataSources.push({\n        extent: extent,\n        clipExtent: clipExtent,\n        data: new Uint8ClampedArray(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n      this.changed();\n      return;\n    }\n\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const targetWidth = typeof size === 'number' ? size : size[0];\n    const targetHeight = typeof size === 'number' ? size : size[1];\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n\n    let dataR, dataU;\n\n    const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n    const reprojs = Math.ceil(bytesPerPixel / 3);\n    for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n      const sources = [];\n      for (let i = 0, len = dataSources.length; i < len; ++i) {\n        const dataSource = dataSources[i];\n        const buffer = dataSource.data;\n        const pixelSize = dataSource.pixelSize;\n        const width = pixelSize[0];\n        const height = pixelSize[1];\n        const context = createCanvasContext2D(width, height, canvasPool);\n        const imageData = context.createImageData(width, height);\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let j = 0, len = data.length; j < len; j += 4) {\n          data[j] = buffer[offset];\n          data[j + 1] = buffer[offset + 1];\n          data[j + 2] = buffer[offset + 2];\n          data[j + 3] = 255;\n          offset += bytesPerPixel;\n        }\n        context.putImageData(imageData, 0, 0);\n        sources.push({\n          extent: dataSource.extent,\n          clipExtent: dataSource.clipExtent,\n          image: context.canvas,\n        });\n      }\n\n      const canvas = renderReprojected(\n        targetWidth,\n        targetHeight,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        false,\n        false,\n        false,\n      );\n\n      for (let i = 0, len = sources.length; i < len; ++i) {\n        const canvas = sources[i].image;\n        const context = canvas.getContext('2d');\n        releaseCanvas(context);\n        canvasPool.push(context.canvas);\n      }\n\n      const context = canvas.getContext('2d');\n      const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n      releaseCanvas(context);\n      canvasPool.push(canvas);\n\n      if (!dataR) {\n        dataU = new Uint8ClampedArray(\n          bytesPerPixel * imageData.width * imageData.height,\n        );\n        dataR = new dataSources[0].dataType(dataU.buffer);\n      }\n\n      const data = imageData.data;\n      let offset = reproj * 3;\n      for (let i = 0, len = data.length; i < len; i += 4) {\n        if (data[i + 3] === 255) {\n          dataU[offset] = data[i];\n          dataU[offset + 1] = data[i + 1];\n          dataU[offset + 2] = data[i + 2];\n        } else {\n          dataU[offset] = 0;\n          dataU[offset + 1] = 0;\n          dataU[offset + 2] = 0;\n        }\n        offset += bytesPerPixel;\n      }\n    }\n\n    if (imageLike) {\n      const context = createCanvasContext2D(targetWidth, targetHeight);\n      const imageData = new ImageData(dataR, targetWidth);\n      context.putImageData(imageData, 0, 0);\n      this.reprojData_ = context.canvas;\n    } else {\n      this.reprojData_ = dataR;\n    }\n    this.reprojSize_ = [\n      Math.round(targetWidth * this.pixelRatio_),\n      Math.round(targetHeight * this.pixelRatio_),\n    ];\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(({tile}) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(tile, EventType.CHANGE, () => {\n        const state = tile.getState();\n        if (\n          state == TileState.LOADED ||\n          state == TileState.ERROR ||\n          state == TileState.EMPTY\n        ) {\n          unlistenByKey(sourceListenKey);\n          leftToLoad--;\n          if (leftToLoad === 0) {\n            this.unlistenSources_();\n            this.reproject_();\n          }\n        }\n      });\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function ({tile}) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.get(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.get(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  * maybe skip transition when not fully opaque\n     *  * decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tileState === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      this.renderComplete = false;\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = (map, frameState) => {\n      const tileSourceKey = getUid(tileSource);\n      const wantedTiles = frameState.wantedTiles[tileSourceKey];\n      const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n      this.updateCacheSize(tilesCount);\n      this.tileCache_.expireCache();\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import('../Feature.js').FeatureLike} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {FeatureToFeatureClass<FeatureType>}\n     */\n    this.featureClass = /** @type {FeatureToFeatureClass<FeatureType>} */ (\n      Feature\n    );\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {FeatureFormat<FeatureType>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   * @override\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   * @override\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {JSONFeature<FeatureType>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @override\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return /** @type {FeatureType|Array<FeatureType>} */ (\n        createRenderFeature(\n          {\n            geometry,\n            id: geoJSONFeature['id'],\n            properties: geoJSONFeature['properties'],\n          },\n          options,\n        )\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return /** @type {FeatureType|Array<FeatureType>} */ (feature);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return /** @type {Array<FeatureType>} */ (features.flat());\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   * @override\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   * @override\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   * @override\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @typedef {function(this:(import(\"./source/Vector\").default<FeatureType>|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<FeatureType>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @template {import(\"./Feature.js\").FeatureLike} FeatureType\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source =\n      /** @type {import(\"./source/Vector\").default<FeatureType>} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader<FeatureType>} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image ? null : this.image.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection),\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection,\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image = null;\n          }\n        }\n      } else {\n        this.image = null;\n      }\n    }\n\n    return !!this.image;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image.getExtent();\n    const img = this.image.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth),\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight),\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const image = this.image;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const context = this.getRenderContext(frameState);\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection,\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY,\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      if (opacity !== 1) {\n        context.save();\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.restore();\n      }\n    }\n    this.postRender(this.context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    let i, ii, j, jj, replays;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageState from './ImageState.js';\nimport ImageWrapper from './Image.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   * @override\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport {apply, compose, create} from '../../transform.js';\nimport {fromResolutionLike} from '../../resolution.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return Promise.resolve([]);\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice()),\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      const imageLayerState = Object.assign({}, layerState, {opacity: 1});\n      const imageFrameState = /** @type {import(\"../../Map.js\").FrameState} */ (\n        Object.assign({}, frameState, {\n          extent: renderedExtent,\n          size: [width, height],\n          viewState: /** @type {import(\"../../View.js\").State} */ (\n            Object.assign({}, frameState.viewState, {\n              rotation: 0,\n            })\n          ),\n          layerStatesArray: [imageLayerState],\n          layerIndex: 0,\n          declutter: null,\n        })\n      );\n      const declutter = this.getLayer().getDeclutter();\n      if (declutter) {\n        imageFrameState.declutter = {\n          [declutter]: new RBush(9),\n        };\n      }\n      let emptyImage = true;\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            if (vectorRenderer.renderFrame(imageFrameState, null)) {\n              vectorRenderer.renderDeclutter(imageFrameState);\n              vectorRenderer.renderDeferred(imageFrameState);\n              emptyImage = false;\n            }\n            callback();\n          }\n        },\n      );\n\n      image.addEventListener(EventType.CHANGE, () => {\n        if (image.getState() !== ImageState.LOADED) {\n          return;\n        }\n        this.image = emptyImage ? null : image;\n        const imagePixelRatio = image.getPixelRatio();\n        const renderedResolution =\n          (fromResolutionLike(image.getResolution()) * pixelRatio) /\n          imagePixelRatio;\n        this.renderedResolution = renderedResolution;\n        this.coordinateToVectorPixelTransform_ = compose(\n          this.coordinateToVectorPixelTransform_,\n          width / 2,\n          height / 2,\n          1 / renderedResolution,\n          -1 / renderedResolution,\n          0,\n          -viewState.center[0],\n          -viewState.center[1],\n        );\n      });\n      image.load();\n    }\n\n    if (this.image) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image;\n  }\n\n  /**\n   * @override\n   */\n  preRender() {}\n\n  /**\n   * @override\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches,\n      );\n    }\n    return super.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      callback,\n      matches,\n    );\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<FeatureType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text on this layer. Any truthy value will enable\n * decluttering. The priority is defined by the `zIndex` of the style and the render order of features. Higher z-index means higher\n * priority. Within the same z-index, a feature rendered before another has higher priority. Items will\n * not be decluttered against or together with items on other layers with the same `declutter` value. If\n * that is needed, use {@link import(\"../layer/Vector.js\").default} instead.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, to an image. This layer type provides great performance\n * during panning and zooming, but point symbols and texts are always rotated with the view and\n * pixels are scaled during zoom animations. For more accurate rendering of vector data, use\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../Feature.js\").default} [FeatureType=import(\"../Feature.js\").default]\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<FeatureType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorImageLayerRenderer>}\n * @api\n */\nclass VectorImageLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.imageRatio;\n    super(baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ =\n      options.imageRatio !== undefined ? options.imageRatio : 1;\n  }\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  getImageRatio() {\n    return this.imageRatio_;\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorImageLayerRenderer(this);\n  }\n}\n\nexport default VectorImageLayer;\n","import {Map as OlMap, View} from \"ol\";\r\nimport {OSM} from \"ol/source\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport {GeoJSON} from \"ol/format\";\r\nimport VectorSource from \"ol/source/Vector\";\r\nimport {VectorImage} from \"ol/layer\";\r\nimport {Fill, Stroke, Style} from \"ol/style\";\r\n\r\nexport default (Original, system) => (props) => {\r\n    const React = system.React;\r\n\r\n    const mapContainer = React.createRef();\r\n    const isGeoJson = props.contentType && (props.contentType.includes('application/json') || props.contentType.includes('application/geo+json'));\r\n\r\n    React.useEffect(() => {\r\n        if (isGeoJson) {\r\n            const raster = new TileLayer({\r\n                source: new OSM(),\r\n            });\r\n\r\n            const features = new GeoJSON().readFeatures(JSON.parse(props.content));\r\n\r\n            features.forEach(function (feature) {\r\n                feature.getGeometry().transform('EPSG:4326', 'EPSG:3857');\r\n            });\r\n\r\n            const source = new VectorSource({\r\n                features: features,\r\n            });\r\n\r\n            const vector = new VectorImage({\r\n                source: source,\r\n                style: (feature) => new Style({\r\n                    stroke: new Stroke({\r\n                        color: feature.getProperties().stroke || 'black',\r\n                        width: 3,\r\n                    }),\r\n                    fill: new Fill({\r\n                        color: feature.getProperties().fill || 'black',\r\n                    }),\r\n                }),\r\n            });\r\n\r\n            const olMap = new OlMap({\r\n                layers: [raster, vector],\r\n                target: mapContainer.current,\r\n                view: new View({\r\n                    center: [0, 0],\r\n                    zoom: 2,\r\n                }),\r\n            });\r\n\r\n            olMap.getView().fit(source.getExtent());\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {isGeoJson && (\r\n                <div style={{height: '400px', marginBottom: '10px'}}>\r\n                    <div\r\n                        ref={mapContainer}\r\n                        style={{width: '100%', height: '100%'}}\r\n                    />\r\n                </div>\r\n            )}\r\n            <Original {...props} />\r\n        </div>\r\n    );\r\n};","import MapWrapperComponent from \"./MapWrapperComponent\";\n\n\nconst SwaggerUiMapPlugin = (/*system*/) => {\n    return {\n        wrapComponents: {\n            responseBody: MapWrapperComponent\n        }\n    }\n};\nwindow.SwaggerUiMapPlugin = SwaggerUiMapPlugin;\n\nexport default SwaggerUiMapPlugin;"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","constructor","type","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","disposed","dispose","disposeInternal","ascending","a","b","linearFindNearest","arr","direction","n","length","i","candidate","reverseSubArray","begin","end","tmp","data","extension","Array","isArray","equals","arr1","arr2","len1","TRUE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","slice","arguments","apply","toPromise","getter","err","Promise","reject","resolve","promiseGetter","clear","object","property","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","keys","index","indexOf","splice","listen","thisArg","once","originalListener","bind","eventsKey","listenOnce","unlistenByKey","Observable","on","un","revision_","changed","EventType","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","Error","uidCounter_","getUid","ol_uid","String","ObjectEvent","oldValue","values","values_","setProperties","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","Property","CollectionEvent","element","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","forEach","f","getArray","item","insertAt","elem","CollectionEventType","removeAt","remove","prev","setAt","except","assertion","errorMessage","min","max","Math","squaredSegmentDistance","x","y","x1","y1","x2","y2","dx","dy","t","angleInDegrees","PI","r","lerp","decimals","factor","pow","round","floor","ceil","background_","background","properties","opacity","visible","zIndex","maxResolution","Infinity","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","state","layer","getZIndex","getOpacity","getVisible","extent","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","CENTER","RESOLUTION","ROTATION","METERS_PER_UNIT","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","units","resolution","point","cosh","PROJECTIONS","EPSG4326Projection","cache","transforms","destination","transformFn","sourceCode","destinationCode","boundingExtent","coordinates","extendCoordinate","buffer","dest","clone","closestSquaredDistanceXY","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","rotation","size","x0","y0","x3","y3","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getRotatedViewport","getIntersection","intersection","intersects","wrapX","projection","projectionExtent","worldWidth","wrapAndSliceX","multiWorld","isFinite","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","worldsAway","sourceExtentWidth","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","levels","level","warn","args","console","showCoordinateWarning","cloneTransform","input","output","identityTransform","addProjection","add","projectionLike","replace","pointResolution","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transform","getTransform","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserResolution","projections2","forwardTransform","inverseTransform","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createMinMaxResolution","cappedMaxRes","disable","easeIn","easeOut","inAndOut","linear","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","mat","c","d","e","dimension","atan","exp","matrixPrecision","transform2D","destinationStride","j","k","anchor","anchorX","anchorY","deltaX","deltaY","tmpTransform","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","applyTransform","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","returnOrUpdate","scale","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getLayoutForStride","layout","getStrideForLayout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","startsWith","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","tmpPoint","squaredDistance","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","deflateMultiCoordinatesArray","coordinatesss","endss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","LinearRing","maxDelta_","maxDeltaRevision_","deflateCoordinate","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","animationCallback","returnValue","setTimeout","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","position","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","degrees","defaultMinResolution","defaultMaxZoom","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","theta","createSnapToN","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","getState","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","geometry","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","inView","layerState","Base","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","map","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","getData","isVisible","view","frameState","getMapInternal","getView","layerStatesArray","getLayerGroup","find","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","some","arrayLayerState","createRenderer","hasRenderer","quickselect","left","compare","defaultCompare","m","s","sd","swap","maxEntries","_maxEntries","_minEntries","all","_all","search","bbox","node","toBBox","nodesToSearch","children","child","childBBox","leaf","contains","collides","load","insert","_build","height","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","parent","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minArea","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","mid","hasArea","toSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","ready","name","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","rgb","_xyz","white","g","arg","_u","_v","l","u","v","xn","yn","zn","luv","vn","yr","lchuv","hr","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","baseHues","hsl","t1","t2","t3","NO_COLOR","cacheSize","withAlpha","color","rgbaToLcha","fromString","raw","Number","parsed","cstr","space","parts","alpha","toLowerCase","base","parseInt","exec","dims","trim","split","shift","parseFloat","endsWith","test","match","join","normalize","asArray","ua","navigator","userAgent","FIREFOX","WEBKIT","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","Image","decode","PASSIVE_EVENT_LISTENERS","passive","window","error","createCanvasContext2D","width","canvasPool","settings","canvas","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","replaceNode","oldNode","parentNode","replaceChild","stateOrLoader","pixelRatio_","image_","loader","requestResolution","then","image","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","catch","finally","setImage","getCacheKey","src","crossOrigin","shared","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","getPattern","pattern","update","createPattern","setSize","maxCacheSize","taintedTestContext","IconImage","imageState","hitDetectionImage_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","fillRect","getSrc","handleLoad","unlisten","handleError","decodeFallback","ctx","globalCompositeOperation","fillStyle","onChange","cacheKey","asColorLike","canvasPattern","patternCanvasContext","asCanvasPattern","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","style","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","body","appendChild","offsetHeight","removeChild","measureAndCacheTextWidth","reduce","curr","RegularShape","canvases_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius2_","radius2","angle_","stroke_","stroke","renderOptions_","loading","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","closePath","setRadius","patternImage_","setColor","patternImage","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getGeometry","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","feature","defaultStyles","createDefaultStyle","Circle","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","newParsingContext","variables","Set","featureId","geometryType","encoded","expectedType","toString","returnType","parser","parsers","parseCallExpression","Ops","createCallExpressionParser","hasArgsCount","withGetArgs","withNoArgs","withArgsOfType","withArgsOfReturnType","hasEvenArgs","argsCount","inputType","fallback","message","interpolationType","JSON","stringify","interpolation","stop","operation","argCount","condition","needleType","haystack","colors","parsedColors","minArgs","maxArgs","expression","argType","validators","computeGeometryType","substring","getGeometries","buildExpression","compileExpression","colorValue","compileAssertionExpression","hasOwn","compileAccessorExpression","concat","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lchaToRgba","always","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styles","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","id","getId","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","setRenderOrder","renderOrder","styleLike","toStyleLike","styleFunction","expireIconCache","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","inversePixelTransform","Map","fontChangeListenerKey_","redrawText","element_","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","BaseVector","renderedLayerStates","previousElement","layerIndex","sourceState","oldChildren","childNodes","oldChild","newChild","replaceChildren","GroupEvent","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","attributions_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","getAllLayers","visibleAttributions","flatMap","getAttributionsCollapsible","setCollapsible","from","updateElement_","attribution","lastChild","removeChildren","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","zoomByDelta","setActive","getActive","mapBrowserEvent","active","delta_","stopEvent","browserEvent","shiftKey","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","targetElement","getTargetElement","rootNode","ShadowRoot","host","hasAttribute","activeElement","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","onFocusOnly","noKinetic_","centroid","distance","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","lastAngle_","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","box_","minArea_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","out_","out","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","pan","platformModifierKey","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","removeLayerMapProperty","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotateOptions","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","currentDoc","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","unobserve","Composite","targetRoot","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","getClientRects","oldSize","tileCoord","transition_","transition","transitionStarts_","interpolate","release","setState","getTileCoord","getAlpha","inTransition","endTransition","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","loadHandler","errorHandler","listening","decoding","loaded","listenImage","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","save","clip","restore","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","leftToLoad","sourceListenKey","unlistenSources_","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","pruneExceptNewestZ","adaptAttributions","attributionLike","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getInterpolate","refresh","setAttributions","TileRange","containsTileRange","tileRange","tmpTileCoord","every","currentVal","res","isSorted","origins","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","getForProjection","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","half","TileSourceEvent","tilePixelRatio_","tilePixelRatio","tileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","getGutterForProjection","setKey","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","withinExtentAndZ","useTile","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplate","template","range","renderXYZTemplate","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","expandUrl","templates","tileUrlFunctions","createFromTileUrlFunctions","createFromTemplates","tileCoordKey","defaultTileLoadFunction","imageTile","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","xyzOptions","gridOptions","createXYZ","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getCacheSize","getPreload","TileProperty","getUseInterimTilesOnError","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","getStaleKeys","prependStaleKey","unshift","getLayer","renderIfReadyAndVisible","loadImage","instructions_","context_","Proxy","pushMethodArgs_","pushFunction","draw","instructionsAtIndex","instructionAtIndex","pixelContext","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","prepareContainer","canvasTransform","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","asImageLike","disposedError","sharedContext","defaultSize","loader_","data_","error_","controller_","controller","imageData","getError","abort","Uint8ClampedArray","reprojData_","reprojError_","reprojSize_","sourceTileGridExtent","dataSources","imageLike","tileData","arrayData","Uint8Array","Float32Array","DataView","toArray","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataType","targetWidth","targetHeight","dataR","dataU","reproj","dataSource","createImageData","putImageData","ImageData","sourceKey","addTileToLookup","tilesByZ","existing","has","removeTileFromLookup","delete","getRenderExtent","gridExtent","tileLayer","extentChanged","renderComplete","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempTileRange_","tempTileCoord_","tileCache_","getTileCache","getOrCreateTile","tileSource","tileOrigin","sourceRevision","renderedRevision_","enqueueTiles","initialZ","minZ","tileQueueKey","findStaleTile_","staleKeys","findAltTiles_","altZ","covered","viewResolution","viewCenter","frameExtent","canvasExtent","targetZ","renderExtent","parentZ","canvasScale","zs","currentClip","clips","clipZs","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","drawTile","updateUsedTiles","tilesCount","updateCacheSize","tileCount","getTileImage","alphaChanged","globalAlpha","BaseTile","geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","interpolatePoint","cumulativeLengths","needle","comparator","cmp","low","high","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","RenderFeature","type_","flatCoordinates_","flatInteriorPoints_","flatMidpoints_","properties_","squaredTolerance_","stride_","simplifiedGeometry_","getFlatInteriorPoints","startOrientation","prevEndIndex","orientation","getFlatMidpoint","getFlatMidpoints","midpoint","enableSimplifyTransformed","lineStringLength","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","getCoordinateAt","appendPoint","multiPoint","getPoint","lineStrings","appendLineString","multiLineString","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","endss_","flatInteriorPointsRevision_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getEndss","getInteriorPoints","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","lastEnds","GeometryCollection","geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","setGeometries","setGeometriesArray","dataProjection","defaultFeatureProjection","featureClass","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformed","fromProjection","toProjection","GeometryConstructor","Point","LineString","Polygon","MultiPoint","MultiLineString","MultiPolygon","createRenderFeature","flat","orientFlatCoordinates","createGeometry","Geometry","getObject","parse","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","readGeometryInternal","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","featureObject","crs","objects","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","rbush","xhr","format","success","failure","XMLHttpRequest","open","responseType","withCredentials","status","responseText","responseXML","onerror","send","loadFeaturesXhr","addFeatures","VectorSourceEvent","format_","overlaps_","overlaps","url_","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removeFeatures","removed","featureChangeKeys","idString","setLoader","imageLayer","imageSource","renderedExtent","imageExtent","imageMapWidth","imageMapHeight","imageResolution","imageResolutionX","imageResolutionY","imagePixelRatio","clipped","dw","dh","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","drawFlatCoordinatess_","numEnds","myBegin","moveToLineToInstruction","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","filteredFlatCoordinates","sharedData","drawFlatCoordinates_","lastStroke","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","beg","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","contextInstructions","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","box","strokePadding","labelOrImage","executeLabelInstructions","drawImageOrLabel","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","circlePixelIndexArrayCache","allInstructions","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","idx","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","userTransform","transform_","transformRotation_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","setTransform","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","hasImage","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","renderFeatureInternal","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","endWorld","world","setDrawContext_","resetDrawContext_","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","dirty","replayGroupInstructions","handleLoad_","vectorRenderer_","layerImageRatio_","getImageRatio","coordinateToVectorPixelTransform_","renderedPixelToCoordinateTransform_","vectorPixel","vectorRenderer","scaleFromCenter","imageLayerState","imageFrameState","emptyImage","imageRatio","imageRatio_","Original","system","props","React","mapContainer","createRef","isGeoJson","contentType","useEffect","raster","TileLayer","OSM","GeoJSON","content","VectorSource","vector","VectorImage","Stroke","Fill","OlMap","current","View","marginBottom","ref","SwaggerUiMapPlugin","wrapComponents","responseBody","MapWrapperComponent"],"sourceRoot":""}