{"version":3,"file":"swagger-ui-map-plugin.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAQ,yBAA2BD,IAEnCD,EAAK,yBAA2BC,GACjC,CATD,CASGK,MAAM,I,mBCRT,IAAIC,EAAsB,CCA1BA,EAAyBJ,IACxB,IAAIK,EAASL,GAAUA,EAAOM,WAC7B,IAAON,EAAiB,QACxB,IAAM,EAEP,OADAI,EAAoBG,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdD,EAAwB,CAACL,EAASU,KACjC,IAAI,IAAIC,KAAOD,EACXL,EAAoBO,EAAEF,EAAYC,KAASN,EAAoBO,EAAEZ,EAASW,IAC5EE,OAAOC,eAAed,EAASW,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDN,EAAwB,CAACY,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFb,EAAyBL,IACH,oBAAXsB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAed,EAASsB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAed,EAAS,aAAc,CAAEwB,OAAO,GAAO,G,mCCL9D,MAAM,EAA+BC,OAAW,GCA1C,EAA+BA,OAAO,aCAtC,EAA+BA,OAAO,iB,aCA5C,MAAM,EAA+BA,OAAO,aCAtC,EAA+BA,OAAO,oB,aCA5C,MAAM,EAA+BA,OAAO,YCAtC,EAA+BA,OAAO,YCQ5C,WAAgBC,EAAUC,GAAM,OAAK,SAACC,GAClC,IAAMC,EAAQF,EAAOE,MAEfC,EAAeD,EAAME,YACrBC,EAAYJ,EAAMK,cAAgBL,EAAMK,YAAYC,SAAS,qBAAuBN,EAAMK,YAAYC,SAAS,yBA4CrH,OA1CAL,EAAMM,WAAU,WACZ,GAAIH,EAAW,CACX,IAAMI,EAAS,IAAIC,IAAJ,CAAc,CACzBC,OAAQ,IAAIC,EAAAA,MAGVC,GAAW,IAAIC,EAAAA,SAAUC,aAAaC,KAAKC,MAAMhB,EAAMiB,UAE7DL,EAASM,SAAQ,SAAUC,GACvBA,EAAQC,cAAcC,UAAU,YAAa,YACjD,IAEA,IAAMX,EAAS,IAAIY,IAAJ,CAAiB,CAC5BV,SAAUA,IAGRW,EAAS,IAAIC,EAAAA,YAAY,CAC3Bd,OAAQA,EACRe,MAAO,SAACN,GAAO,OAAK,IAAIO,EAAAA,MAAM,CAC1BC,OAAQ,IAAIC,EAAAA,OAAO,CACfC,MAAOV,EAAQW,gBAAgBH,QAAU,QACzCI,MAAO,IAEXC,KAAM,IAAIC,EAAAA,KAAK,CACXJ,MAAOV,EAAQW,gBAAgBE,MAAQ,WAE7C,IAGQ,IAAIE,EAAAA,IAAM,CACpBC,OAAQ,CAAC3B,EAAQe,GACjBa,OAAQlC,EAAamC,QACrBC,KAAM,IAAIC,EAAAA,KAAK,CACXC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIRC,UAAUC,IAAIjC,EAAOkC,YAC/B,CACJ,GAAG,IAGC3C,EAAA4C,cAAA,WACKzC,GACGH,EAAA4C,cAAA,OAAKpB,MAAO,CAACqB,OAAQ,QAASC,aAAc,SACxC9C,EAAA4C,cAAA,OACIG,IAAK9C,EACLuB,MAAO,CAACM,MAAO,OAAQe,OAAQ,WAI3C7C,EAAA4C,cAAC/C,EAAaE,GAG1B,CAAC,EClED,IAAMiD,EAAqB,WACvB,MAAO,CACHC,eAAgB,CACZC,aAAcC,GAG1B,EACAvD,OAAOoD,mBAAqBA,EAE5B,U","sources":["webpack://swagger-ui-map-plugin/webpack/universalModuleDefinition","webpack://swagger-ui-map-plugin/webpack/bootstrap","webpack://swagger-ui-map-plugin/webpack/runtime/compat get default export","webpack://swagger-ui-map-plugin/webpack/runtime/define property getters","webpack://swagger-ui-map-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://swagger-ui-map-plugin/webpack/runtime/make namespace object","webpack://swagger-ui-map-plugin/external window \"ol\"","webpack://swagger-ui-map-plugin/external window \"ol/source\"","webpack://swagger-ui-map-plugin/external window \"ol/layer/Tile\"","webpack://swagger-ui-map-plugin/external window \"ol/format\"","webpack://swagger-ui-map-plugin/external window \"ol/source/Vector\"","webpack://swagger-ui-map-plugin/external window \"ol/layer\"","webpack://swagger-ui-map-plugin/external window \"ol/style\"","webpack://swagger-ui-map-plugin/./src/MapWrapperComponent.js","webpack://swagger-ui-map-plugin/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"swagger-ui-map-plugin\"] = factory();\n\telse\n\t\troot[\"swagger-ui-map-plugin\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ol\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ol/source\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ol/layer/Tile\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ol/format\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ol/source/Vector\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ol/layer\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ol/style\"];","import {Map as OlMap, View} from \"ol\";\r\nimport {OSM} from \"ol/source\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport {GeoJSON} from \"ol/format\";\r\nimport VectorSource from \"ol/source/Vector\";\r\nimport {VectorImage} from \"ol/layer\";\r\nimport {Fill, Stroke, Style} from \"ol/style\";\r\n\r\nexport default (Original, system) => (props) => {\r\n    const React = system.React;\r\n\r\n    const mapContainer = React.createRef();\r\n    const isGeoJson = props.contentType && (props.contentType.includes('application/json') || props.contentType.includes('application/geo+json'));\r\n\r\n    React.useEffect(() => {\r\n        if (isGeoJson) {\r\n            const raster = new TileLayer({\r\n                source: new OSM(),\r\n            });\r\n\r\n            const features = new GeoJSON().readFeatures(JSON.parse(props.content));\r\n\r\n            features.forEach(function (feature) {\r\n                feature.getGeometry().transform('EPSG:4326', 'EPSG:3857');\r\n            });\r\n\r\n            const source = new VectorSource({\r\n                features: features,\r\n            });\r\n\r\n            const vector = new VectorImage({\r\n                source: source,\r\n                style: (feature) => new Style({\r\n                    stroke: new Stroke({\r\n                        color: feature.getProperties().stroke || 'black',\r\n                        width: 3,\r\n                    }),\r\n                    fill: new Fill({\r\n                        color: feature.getProperties().fill || 'black',\r\n                    }),\r\n                }),\r\n            });\r\n\r\n            const olMap = new OlMap({\r\n                layers: [raster, vector],\r\n                target: mapContainer.current,\r\n                view: new View({\r\n                    center: [0, 0],\r\n                    zoom: 2,\r\n                }),\r\n            });\r\n\r\n            olMap.getView().fit(source.getExtent());\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {isGeoJson && (\r\n                <div style={{height: '400px', marginBottom: '10px'}}>\r\n                    <div\r\n                        ref={mapContainer}\r\n                        style={{width: '100%', height: '100%'}}\r\n                    />\r\n                </div>\r\n            )}\r\n            <Original {...props} />\r\n        </div>\r\n    );\r\n};","import MapWrapperComponent from \"./MapWrapperComponent\";\n\n\nconst SwaggerUiMapPlugin = (/*system*/) => {\n    return {\n        wrapComponents: {\n            responseBody: MapWrapperComponent\n        }\n    }\n};\nwindow.SwaggerUiMapPlugin = SwaggerUiMapPlugin;\n\nexport default SwaggerUiMapPlugin;"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","window","Original","system","props","React","mapContainer","createRef","isGeoJson","contentType","includes","useEffect","raster","TileLayer","source","OSM","features","GeoJSON","readFeatures","JSON","parse","content","forEach","feature","getGeometry","transform","VectorSource","vector","VectorImage","style","Style","stroke","Stroke","color","getProperties","width","fill","Fill","OlMap","layers","target","current","view","View","center","zoom","getView","fit","getExtent","createElement","height","marginBottom","ref","SwaggerUiMapPlugin","wrapComponents","responseBody","MapWrapperComponent"],"sourceRoot":""}